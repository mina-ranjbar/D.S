#Example 1

def Sequential_Search(dlist, item):

    pos = 0
    found = False
    
    while pos < len(dlist) and not found:
        if dlist[pos] == item:
            found = True
        else:
            pos = pos + 1
    
    return found, pos

print(Sequential_Search([11,23,58,31,56,77,43,12,65,19],31))

#output:
(True, 3)



#Example 2

def linear_Search(list1, n, key):  
  
    # Searching list1 sequentially  
    for i in range(0, n):  
        if (list1[i] == key):  
            return i  
    return -1  
  
  
list1 = [1 ,3, 5, 4, 7, 9]  
key = 7  
  
n = len(list1)  
res = linear_Search(list1, n, key)  
if(res == -1):  
    print("Element not found")  
else:  
    print("Element found at index: ", res)  

    #output:
    
Element found at index:  4


#Example 3

# Linear Search in Python


def linearSearch(array, n, x):

    # Going through array sequencially
    for i in range(0, n):
        if (array[i] == x):
            return i
    return -1


array = [2, 4, 0, 1, 9]
x = 1
n = len(array)
result = linearSearch(array, n, x)
if(result == -1):
    print("Element not found")
else:
    print("Element found at index: ", result)

    #output:

    Element found at index:  3


    #Example 4

import re

# Sample input
arr = [10, 20, 80, 30, 60, 50, 110, 100, 130, 170]
x = 110

# Convert the array to a string
arr_str = ','.join(str(i) for i in arr)

# Use regular expression to search for the element in the string
match = re.search(r'\b{}\b'.format(x), arr_str)

# Output
if match:
	# Calculate the index by counting the number of commas before the match
	result = arr_str[:match.start()].count(',')
	print(f"Element {x} is present at index {result}")
else:
	print(f"Element {x} is not present in the array")

  
#output:

 Element 110 is present at index 6



#Example 5

def sequential_search(list_items, item):

    ind = 0
    found = False

    while ind < len(list_items) and not found:
        if list_items[ind] == item:
            found = True
        else:
            ind = ind + 1

    return found, ind

    mylist = [1,5,2,7,4,8,10,12,4]

    sequential_search(mylist, 7)

    #output:
    (True, 3)

    #output:
    (True, 4)
